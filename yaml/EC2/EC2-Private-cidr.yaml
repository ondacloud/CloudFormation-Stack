Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: "<env>"

  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64'

Resources:
  EC2PrivateInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: <instance type>
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      SubnetId:
        Fn::ImportValue: <env>-stack-VPC-private-a
      KeyName: <key>
      IamInstanceProfile: !Ref AdminIAMRole
      PrivateIpAddress: <CIDR>
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          ...
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-ec2
  AdminIAMRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      RoleName: !Sub ${EnvironmentName}-admin-role
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  AdminInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref 'AdminIAMRole'

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref SecurityGroupDescription
      VpcId:
        Fn::ImportValue: <env>-stack-VPC-VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: <port>
        ToPort: <port>
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: <port>
        ToPort: <port>
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EC2-SG
Outputs:
  EC2Instance:
    Description: "private EC2 Instance"
    Value: !Ref EC2PrivateInstance
    Export:
      Name:
          'Fn::Sub': '${AWS::StackName}-private-EC2-Instance'